{
    "monitor-files": {
        "prefix": "monitor-files",
        "body": [
            "using System;\r",
            "using System.IO;\r",
            "using System.Security.Permissions;\r",
            "using System.Diagnostics;\r",
            "\r",
            "public class Watcher\r",
            "{\r",
            "\r",
            "    public static void Main()\r",
            "    {\r",
            "    Run();\r",
            "\r",
            "    }\r",
            "\r",
            "    [PermissionSet(SecurityAction.Demand, Name=\"FullTrust\")]\r",
            "    public static void Run()\r",
            "    {\r",
            "        string[] args = System.Environment.GetCommandLineArgs();\r",
            "\r",
            "        // If a directory is not specified, exit program.\r",
            "        if(args.Length != 2)\r",
            "        {\r",
            "            // Display the proper way to call the program.\r",
            "            Console.WriteLine(\"Usage: Watcher.exe (directory)\");\r",
            "            return;\r",
            "        }\r",
            "\r",
            "        // Create a new FileSystemWatcher and set its properties.\r",
            "        FileSystemWatcher watcher = new FileSystemWatcher();\r",
            "        // watcher.Path = args[1];\r",
            "        watcher.Path = @\"${1:path-to-watch}\";    \r",
            "        /* Watch for changes in LastAccess and LastWrite times, and\r",
            "           the renaming of files or directories. */\r",
            "        watcher.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite\r",
            "            | NotifyFilters.FileName | NotifyFilters.DirectoryName;\r",
            "        // Only watch text files.\r",
            "        watcher.Filter = \"deploy.txt\";\r",
            "\r",
            "        // Add event handlers.\r",
            "        // watcher.Changed += new FileSystemEventHandler(OnChanged);\r",
            "        watcher.Created += new FileSystemEventHandler(OnCreated);\r",
            "        //watcher.Deleted += new FileSystemEventHandler(OnChanged);\r",
            "        watcher.Renamed += new RenamedEventHandler(OnRenamed);\r",
            "\r",
            "        // Begin watching.\r",
            "        watcher.EnableRaisingEvents = true;\r",
            "\r",
            "        // Wait for the user to quit the program.\r",
            "        Console.WriteLine(\"Press \'q\' to quit the sample.\");\r",
            "        while(Console.Read()!='q');\r",
            "    }\r",
            "\r",
            "    // Define the event handlers.\r",
            "    private static void OnCreated(object source, FileSystemEventArgs e)\r",
            "    {\r",
            "        // Specify what is done when a file is changed, created, or deleted.\r",
            "        Console.WriteLine(\"File: \" +  e.FullPath + \" \" + e.ChangeType);\r",
            "        File.Delete( @\"${1:path-to-watch}\deploy.txt\");       \r",
            "        Process.Start(\"${2:process-to-start}.exe\");\r",
            "\r",
            "    }\r",
            "\r",
            "    private static void OnRenamed(object source, RenamedEventArgs e)\r",
            "    {\r",
            "        Console.WriteLine(\"File: \" +  e.FullPath + \" \" + e.ChangeType);\r",
            "        File.Delete( @\"${1:path-to-watch}\deploy.txt\");       \r",
            "        Process.Start(\"${2:process-to-start}.exe\");\r",
            "    }\r",
            "}\r",
            ""
        ],
        "description": "monitor-files"
    }
}